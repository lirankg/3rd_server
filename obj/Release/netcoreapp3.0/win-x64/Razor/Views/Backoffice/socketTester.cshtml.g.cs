#pragma checksum "C:\private\Yoel\Server2\Server\Server\Views\Backoffice\socketTester.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cc5a1287526fe87b385738a3cb7150c0b878d053"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Backoffice_socketTester), @"mvc.1.0.view", @"/Views/Backoffice/socketTester.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cc5a1287526fe87b385738a3cb7150c0b878d053", @"/Views/Backoffice/socketTester.cshtml")]
    public class Views_Backoffice_socketTester : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cc5a1287526fe87b385738a3cb7150c0b878d0532735", async() => {
                WriteLiteral("\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>Page</title>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cc5a1287526fe87b385738a3cb7150c0b878d0533793", async() => {
                WriteLiteral(@"
    <h1>Stream to me</h1>
    <label>id of the simulation is:</label> <input type=""text"" readonly id=""simId"" />
    <button type=""button"" onclick=""startSimulation()"">start simulation</button>
    <button type=""button"" onclick=""runTests()"">run test messages</button>
    <button type=""button"" onclick=""getInitState()"">get initial state</button>

    <div>
        <label>info:</label>
        <div id=""initState""></div>
    </div>
    <ul id=""StreamToMe""></ul>

    <script>
        (function () {

            document.getElementById(""simId"").value = uuidv4();

            var getWebSocketMessages = function (onMessageReceived) {
                var simId = document.getElementById(""simId"").value;
                var url = `wss://${location.host}/api/stream/NewConnection/` + simId
                console.log('url is: ' + url);

                var webSocket = new WebSocket(url);

                webSocket.onmessage = onMessageReceived;
            };

            var ulElement = document");
                WriteLiteral(@".getElementById('StreamToMe');

            getWebSocketMessages(function (message) {
                var messageAsJson = JSON.parse(message.data);
                console.log(messageAsJson);

                ulElement.innerHTML = ulElement.innerHTML += `<li>${message.data}</li>`
            });
        }());


        function uuidv4() {
            return 'xxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }
    </script>
    <script>
        function startSimulation() {
            var simId = document.getElementById(""simId"").value;
            fetch(`https://${location.host}/api/Backoffice/startSimulation/` + simId,
                {
                    method: 'get',
                })
                .then(function (response) {
                    return response.json();
                })
                .then(function (myJson) {
        ");
                WriteLiteral(@"            console.log(JSON.stringify(myJson));
                });
        }

        function runTests() {
            var simId = document.getElementById(""simId"").value;
            fetch(`https://${location.host}/api/Backoffice/sendTestsMessage/` + simId,
                {
                    method: 'get',
                })
                .then(function (response) {
                    return response.json();
                })
                .then(function (myJson) {
                    console.log(JSON.stringify(myJson));
                });
        }

        function getInitState(){
            fetch(`https://${location.host}/api/Backoffice/getInitialState`,
                {
                    method: 'get',
                })
                .then(function (response) {
                    return response.json();
                })
                .then(function (res) {

                    var node = document.createElement(""P"");
                    document.getElem");
                WriteLiteral(@"entById(""initState"").innerHTML = """";
                    node.innerHTML = """";
                    res.forEach(function (element) {
                        var pretty = JSON.stringify(element, undefined, 4);
                        node.innerHTML += ""<p>new entity</p><pre onclick=deepdive('"" + element.entity.id + ""') id="" + element.entity.id + "">"" + pretty + ""</pre>"";
                        //node.innerHTML = pretty;
                        //+ JSON.stringify(element);
                    });
                    document.getElementById(""initState"").appendChild(node);


                    //document.getElementById(""initState"").value = myJson;
                    console.log(JSON.stringify(res));
                });
        }
        function deepdive(entityId) {
        }
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
